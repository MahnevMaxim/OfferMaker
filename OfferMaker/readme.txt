Если лень писать много букв, то в проекте приняты сокращения:
- Nom - Nomenclature
- Noms - Nomenclatures
- Cat - Category
- Cats - Categories
- тип CallResult в названиях переменных обозначаем суффиксом Cr или cr 
- Auth - Authorization
- Doc - Document

В конструкторе работаем с копией объекта номенклатуры, т.к. нам не нужно, чтобы изменялся оригинальный объект, 
а в конструкторе есть возможность редактирования номеклатуры и описания.

Во ViewModel многие сеттеры и OnPropertyChanged можно убрать, но в случае,
если ViewModel придётся переносить и делать окно не на MvvmFactory или понадобится 2-х сторонняя привязка, придётся всё восстанавливать. Поэтому пусть будут.

Комментарии нужно писать в модели, но не во ViewModel.

При получении данных с сервера используются ассинхрованные методы, они используются взамен многопоточности. 
Можно все методы запустить, получить таски, а потом уже дожидаться их выполнения. Так было бы логичнее. Но пока так.

Необходимо сделать инициализацию конструктора, а следовательно и класса Offer, после инициализации пользователя, в конструктор Offer засунуть пользователя.

Категории.
Категории у нас приходят в виде ObservableCollection<Nomenclature> Nomenclatures в каталог,
потом из них строится древовидная коллекция ObservableCollection<Nomenclature> CategoriesTree в каталоге.
При сохранением дерево распрямляется. Если есть категории без Id, то отношения с другими категориями у них устанавливаются через Guid свойство. Перед распрямлением дерева
устанавливаются отношения между категориями в настоящий момент времени. Свойство Id Category устанавливается при вставке в базу данных.
Свойства Category Guid и ParentGuid предназначены для независимой от свойства Id  от сервера идентификации категорий и построения дерева,
это нужно для работы оффлайн. Тоже касается номенклатур.

По сути Id только для удобочитаемости при отладке, можно обходиться одними Guid.

Разрешения:

Методы, доступные всем:
- авторизация
- чтение должностей 
- чтение данных аккаунта
- смена пароля
- редактирование своего аккаунта

Админ:
- доступны все контроллеры и их методы

Управление должностями:
- чтение должностей 
- создание должностей 
- редактирование должностей 
- удаление должностей 

Управление пользователями:
- чтение пользователей 
- создание пользователей 
- редактирование пользователей 
- смена паролей пользователей 
- удаление пользователей 
